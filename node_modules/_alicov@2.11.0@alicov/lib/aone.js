'use strict';

var path = require('path');
var fs = require('fs');
var JSONStream = require('JSONStream');

// jest --json
// {"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":6,"numPassedTests":31,
// "numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,
// "numTotalTestSuites":6,"numTotalTests":31

function getStats(result) {
  if (('numTotalTests' in result) && ('numPassedTests' in result)) {
    // jest json result
    var stats = {
      blocked: result.numPendingTests || 0,
      passed: result.numPassedTests || 0,
      failed: result.numFailedTests || 0,
      skipped: result.numTodoTests || 0,
      total: result.numTotalTests,
    };
    return stats;
  }

  // allFailures 里面有数据，也当做失败
  // TEST_CASE_AMOUNT: {"blocked":0,"failed":0,"passed":2,"skipped":0}
  var asserts = result.stats.asserts;
  var stats = {
    blocked: result.stats.pending || 0,
    passed: result.stats.passes || 0,
    failed: result.stats.failures || 0,
    skipped: result.stats.skipped || 0,
  };
  if (result.allFailures && result.allFailures.length > 0 && stats.failed === 0) {
    // before hook 失败
    stats.failed = result.allFailures.length;
  }
  stats.total = typeof asserts === 'number' ? asserts : stats.passed + stats.failed;
  return stats;
  // "stats": {
  //   "suites": 1,
  //   "tests": 0,
  //   "passes": 0,
  //   "pending": 0,
  //   "failures": 0,
  //   "start": "2018-09-27T14:36:17.255Z",
  //   "end": "2018-09-27T14:36:20.070Z",
  //   "duration": 2815,
  //   "testsRegistered": 7,
  //   "passPercent": 0,
  //   "pendingPercent": 0,
  //   "other": 1,
  //   "hasOther": true,
  //   "skipped": 7,
  //   "hasSkipped": true,
  //   "passPercentClass": "danger",
  //   "pendingPercentClass": "danger"
  // },
  // "allTests": [],
  // "allPending": [],
  // "allPasses": [],
  // "allFailures": [
  // https://github.com/yovasx2/ava-tap-json
  // {
  // "stats": {
  //   "asserts": 4,
  //   "passes": 2,
  //   "failures": 2
  // },
}

function printAoneCICaseStats(mochaReportJSONPath) {
  if (mochaReportJSONPath.indexOf('mochawesome-reports') >= 0) {
    var tmpfile = path.join(mochaReportJSONPath, 'index.json');
    // mochawesome.json
    if (!fs.existsSync(tmpfile)) {
      tmpfile = path.join(mochaReportJSONPath, 'mochawesome.json');
    }
    mochaReportJSONPath = tmpfile;
  }
  var aoneReportJSON = getStats(require(mochaReportJSONPath));
  var passRate = aoneReportJSON.passed / aoneReportJSON.total * 100;
  delete aoneReportJSON.total;
  console.log('\nPASS_RATE: ' + passRate.toFixed(2) + '%');
  console.log('\nTEST_CASE_AMOUNT: %s', JSON.stringify(aoneReportJSON));
}

module.exports = printAoneCICaseStats;
