#!/usr/bin/env node

'use strict';

var OssClient = require('ali-oss');
var path = require('path');
var fs = require('fs');
var chalk = require('chalk');
var co = require('co');
var pwd = process.cwd();
var pkg = require(path.join(pwd, 'package.json'));

pkg.config = pkg.config || {};
var config = pkg.config.alicov || pkg.config.cov || pkg.config['travis-cov'] || {};
var threshold = typeof config.threshold === 'object' ? config.threshold : (Number(config.threshold) || 0);

var ossClient = new OssClient({
  accessKeyId: 'qFTrKdsqOdm9RJtZ',
  accessKeySecret: 'I8X382yoQzmJ4OjUqH1IylPP774Jic',
  bucket: 'alipay-rmsdeploy-dev-assets',
  internal: false,
  timeout: 60000,
  endpoint: 'oss-cn-hangzhou-zmf.aliyuncs.com',
});

var mochaReportDir = path.join(pwd, 'node_modules/.mochawesome-reports');
if (!fs.existsSync(mochaReportDir)) {
  mochaReportDir = path.join(pwd, 'mochawesome-reports');
}
if (fs.existsSync(mochaReportDir)) {
  require('../lib/upload_dir')(ossClient, 'mochawesome', mochaReportDir, pkg, /(?:index|mochawesome)\.html/, function(_, testReportUrl) {
    co(function* () {
      if (testReportUrl) {
        console.log('TEST_REPORT: %s', testReportUrl);
        try {
          require('../lib/aone')(mochaReportDir);
        } catch (err) {
          console.error(err);
          console.log(chalk.red('\n  [alicov] 没有找到 JSON 形式 mocha report 输出文件，无法输出 Aone `TEST_CASE_AMOUNT`！ \n'));
        }
      }
      uploadCoverageDir(testReportUrl);
    }).catch(function (err) {
      console.error(err);
    });
  });
} else {
  var tapJSONFile = path.join(pwd, 'node_modules/.tap.json');
  if (fs.existsSync(tapJSONFile)) {
    try {
      require('../lib/aone')(tapJSONFile);
    } catch (err) {
      console.error(err);
      console.log(chalk.red('\n  [alicov] 没有找到 JSON 形式 tap report 输出文件，无法输出 Aone `TEST_CASE_AMOUNT`！ \n'));
    }
  }
  uploadCoverageDir();
}

function uploadCoverageDir(testReportUrl) {
  // $ alicov no-coverage
  // 表示忽略 coverage
  var coverageDir = process.argv[2];
  if (coverageDir === 'no-coverage') return;

  if (!coverageDir) {
    // 默认尝试 alicov coverage/
    if (fs.existsSync(path.join(pwd, 'coverage'))) {
      coverageDir = 'coverage';
    }
  }

  if (!coverageDir) {
    // no coverageDir -> process.exit
    console.log(chalk.red('\n  [alicov] 抱歉，没有找到 coverage/ 目录，无法解析覆盖率 ！ \n  如果你使用 nyc 作为覆盖率工具，那么请加上 "-r text-summary -r json-summary -r json -r lcov" 参数'));
    process.exit(1);
  }

  coverageDir = path.join(process.cwd(), coverageDir);
  require('../lib/dir')(threshold, ossClient, coverageDir, pkg, testReportUrl);
}
